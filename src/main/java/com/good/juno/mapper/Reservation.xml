<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.good.juno.dao.ReservationIDao">

	<!-- 지점목록 기져오기 -->
	<select id="branchList" resultType="com.good.juno.dto.BranchDto">
		SELECT * FROM branch ORDER BY branchName ASC;
	</select>
	
	<!-- 페이징 처리 -->
<!--  	<select id="getShopList" parameterType="map" resultType="com.good.juno.dto.ReservationDto">
	    SELECT * FROM branch
	    LIMIT #{pageSize} OFFSET #{offset}
	</select> 
	
	<select id="getShopListCount" parameterType="map" resultType="int">
	    SELECT COUNT(*) FROM branch
	</select> -->

	<!-- (선택한 지점의) 디자이너 목록 -->
	<select id="designerList" resultType="com.good.juno.dto.DesignerDto">
		select * from designer where branchId=#{branchId}
	</select>
	<!-- 선택한 지점 정보 -->
	<select id="selectedBranchInfo" resultType="com.good.juno.dto.BranchDto">
		SELECT * FROM branch WHERE branchId=#{param1}
	</select>
	
	<!-- 선택한 디자이너의 정보 -->
	<select id="selectedDesignerInfo" resultType="com.good.juno.dto.DesignerDto">
        SELECT * FROM designer WHERE designerId = #{designerId}
    </select>
    
    <!-- 선택한 디자이너의 (근무)정보 -->
    <select id="selectedDesignerWorkInfo" resultType="com.good.juno.dto.DesignerWorkDto">
	    select * from designerWork where designerId=#{designerId} 
	</select>
	
	
    <!-- 선택한 디자이너의 예약된 시간 목록 조회 -->
<!--  	<select id="getBookedTimes" resultType="com.good.juno.dto.ReservationDto">
	    SELECT reservationDate, reservationTime FROM reservation 
	    WHERE designerId = #{designerId} AND reservationDate LIKE #{reservationDate}
	</select>  -->
	 <select id="getBookedTimes" resultType="com.good.juno.dto.ReservationDto">
	    SELECT reservationTime FROM reservation 
	    WHERE designerId = #{designerId} AND reservationDate LIKE #{reservationDate}
	</select> 

	<!-- 예약 -->
	<insert id="insertReservation" parameterType="com.good.juno.dto.ReservationDto">
		insert into reservation (reservationDate, reservationTime, sisul, userId, branchId, designerId) 
		values (#{reservationDate}, #{reservationTime}, #{sisul}, #{userId}, #{branchId}, #{designerId})
	</insert>	
	

    
	
	
	
	
	<!-- 글 상세내용 BContentCommand -->
	<select id="contentView" resultType="com.good.juno.dto.ReservationDto">
		select * from mvc_board where bId=#{param1}
	</select>
	<!-- 글 상세내용 - 조회수 -->
	<update id="upHit">
		update mvc_board set bHit = bHit + 1 where bId=#{param1}
	</update>	
	
	<!-- 수정 BModifyCommand -->
	<update id="modify">
		update mvc_board set bName=#{param1}, bTitle=#{param2}, bContent=#{param3} where bId=#{param4}
	</update>	
	
	<!-- 삭제 BDeleteCommand -->
	<delete id="delete">
		delete from mvc_board where bId=#{param1}
	</delete>
	
	<!-- 답변 등록화면 BReplyViewCommand -->
	<select id="reply_view" resultType="com.good.juno.dto.ReservationDto">
		select * from mvc_board where bId=#{param1}
	</select>
	
	<!-- 답변 달기 BReplyCommand -->
	<insert id="reply">
		insert into mvc_board (bName, bTitle, bContent, bGroup, bStep, bIndent) 
		values (#{param1}, #{param2}, #{param3}, #{param4}, #{param5}, #{param6})
	</insert>	
	<!-- 답변 달기 - 답변 정렬 -->
	<update id="replyShape">
		update mvc_board set bStep=bStep+1 where bGroup=#{param1} and bStep > #{param2}
	</update>	
	
	<!-- 글 작성 -->
	<insert id="write">
        <selectKey keyProperty="maxCount" resultType="int" order="BEFORE">
            SELECT IFNULL(MAX(bId)+1, 1) AS maxCount FROM mvc_board <!-- IFNULL(bId컬럼의 max값, 없으면 1) -->
        </selectKey>
        insert into mvc_board (bId, bName, bTitle, bContent, bHit, bGroup, bStep, bIndent) 
        values (#{maxCount}, #{param1}, #{param2}, #{param3}, 0, #{maxCount}, 0, 0);
    </insert>
   <!--  
   	아래의 두 SQL문을 합쳐서 글작성 메서드 
	SELECT IFNULL(MAX(bId)+1, 1) AS BID FROM mvc_board // IFNULL(bId컬럼의 max값, 없으면 1)
	insert into mvc_board (bId, bName, bTitle, bContent, bHit, bGroup, bStep, bIndent) values (?, ?, ?, ?, 0, ?, 0, 0 )
	 -->

	
</mapper>


