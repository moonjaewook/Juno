<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.good.juno.dao.ReservationIDao">

	<!-- 지점목록 기져오기 -->
	<select id="branchList" resultType="com.good.juno.dto.BranchDto">
		SELECT * FROM branch ORDER BY branchName ASC;
	</select>
	
	<!-- 페이징 처리 -->
<!--  	<select id="getShopList" parameterType="map" resultType="com.good.juno.dto.ReservationDto">
	    SELECT * FROM branch
	    LIMIT #{pageSize} OFFSET #{offset}
	</select> 
	
	<select id="getShopListCount" parameterType="map" resultType="int">
	    SELECT COUNT(*) FROM branch
	</select> -->

	<!-- (선택한 지점의) 디자이너 목록 -->
	<select id="designerList" resultType="com.good.juno.dto.DesignerDto">
		select * from designer where branchId=#{branchId}
	</select>
	<!-- 선택한 지점 정보 -->
	<select id="selectedBranchInfo" resultType="com.good.juno.dto.BranchDto">
		SELECT * FROM branch WHERE branchId=#{param1}
	</select>
	
	<!-- 선택한 디자이너의 정보 -->
	<select id="selectedDesignerInfo" resultType="com.good.juno.dto.DesignerDto">
        SELECT * FROM designer WHERE designerId = #{designerId}
    </select>
    
    <!-- 선택한 디자이너의 (근무)정보 -->
    <select id="selectedDesignerWorkInfo" resultType="com.good.juno.dto.DesignerWorkDto">
	    select * from designerWork where designerId=#{designerId} 
	</select>
	
	
    <!-- 선택한 디자이너의 예약된 시간 목록 조회 -->
<!--  	<select id="getBookedTimes" resultType="com.good.juno.dto.ReservationDto">
	    SELECT reservationDate, reservationTime FROM reservation 
	    WHERE designerId = #{designerId} AND reservationDate LIKE #{reservationDate}
	</select>  -->
	 <select id="getBookedTimes" resultType="com.good.juno.dto.ReservationDto">
	    SELECT reservationTime FROM reservation 
	    WHERE designerId = #{designerId} AND reservationDate LIKE #{reservationDate}
	</select> 

	<!-- 예약 -->
<!-- 	<insert id="insertReservation" parameterType="com.good.juno.dto.ReservationDto">
		insert into reservation (reservationDate, reservationTime, sisul, userId, branchId, designerId) 
		values (#{reservationDate}, #{reservationTime}, #{sisul}, #{userId}, #{branchId}, #{designerId})
	</insert>	 -->
	<!--
	<insert id="insertReservation" parameterType="com.good.juno.dto.ReservationDto">
		insert into reservation (reservationDate, reservationTime, userId, branchId, designerId) 
		values (#{reservationDate}, #{reservationTime} #{userId}, #{branchId}, #{designerId})
	</insert>
	-->
	<insert id="insertReservation" parameterType="com.good.juno.dto.ReservationDto">
	    INSERT INTO reservation (reservationTime, userId, branchId, designerId)
	    VALUES (#{reservationTime}, #{userId}, #{branchId}, #{designerId})
	</insert>
	<insert id="insertReservation2">
	    INSERT INTO reservation (reservationTime, userId, branchId, designerId)
	    VALUES (#{param1}, #{param2}, #{param3}, #{param4})
	</insert>
	

	
</mapper>


